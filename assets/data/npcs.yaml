Gnome:
  sprite:
    atlas: units
    tag: Gnome
  score: 1
  components:
    health: [1, 1]

Phantom:
  sprite:
    atlas: units
    tag: Phantom
  score: 2
  components:
    health: [2, 2]

Banshee:
  sprite:
    atlas: units
    tag: Banshee
  tier: 2
  score: 3
  components:
    health: [3, 3]

Imp:
  sprite:
    atlas: units
    tag: Imp
  tier: 2
  score: 2
  components:
    health: [2, 2]
    on_attack: "imp_attack"
  script: >
    pub fn imp_attack(world, entity, _) {
      RuneCommand::ChangeFood(-1, Some(entity))
    }
  description: >
    On attack: steal 1 food.

Ghoul:
  sprite:
    atlas: units
    tag: Ghoul
  tier: 3
  score: 3
  components:
    health: [3, 3]
    on_damage: "ghoul_damage"
  script: >
    pub fn ghoul_damage(world, entity, _) {
      RuneCommand::ChangeHealth(entity, 1)
    }
  description: >
    On non lethal damage: gain +1 health.

Poltergeist:
  sprite:
    atlas: units
    tag: Poltergeist
  tier: 4
  score: 2
  components:
    health: [1, 1]
    on_attack: "poltergeist_attack"
  script: >
    pub fn poltergeist_attack(world, entity, cmd) {
      let position = world.get("position", entity).unwrap();
      let commands  = [];
      for player in world.get_players_in_column(position.x) {
        // Do not damage the attacked player again.
        if player != cmd.1 {
          commands.push(RuneCommand::ChangeHealth(player, -1));
        }
      }
      commands
    }
  description: >
    On attack: damage every other player in the column for 1.

Vortex:
  sprite:
    atlas: units
    tag: Vortex
  tier: 4
  score: 3
  components:
    health: [3, 3]
    on_damage: "vortex_damage"
  script: >
    pub fn vortex_damage(world, entity, cmd) {
      let position = world.get("position", entity).unwrap();
      if position.x == 0 {
        return;
      }
      let (w, h) = world.board_size();
      RuneCommand::MoveUnit(entity, Position { x: position.x - 1, y: h })
    }
  description: >
    On non lethal damage: jump to a previous column.

Chaos:
  sprite:
    atlas: units
    tag: Chaos
  tier: 4
  score: 3
  components:
    health: [6, 6]
    on_damage: "chaos_damage"
    trigger_limit: [1, 1]
  script: >
    pub fn chaos_damage(world, entity, cmd) {
      RuneCommand::ChangeHealth(entity, -3)
    }
  description: >
    On non lethal damage: loose 3 health.

